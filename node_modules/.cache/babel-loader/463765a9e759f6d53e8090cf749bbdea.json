{"ast":null,"code":"var _jsxFileName = \"/home/blck-wlf/Documents/Devellopement/Front-End/REACTJS avec FromScratch-youtube/projet-world/src/components/Contries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Cards from './Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  const [playOnce, setPlayOnce] = useState(true);\n  const [rangeValue, setRangeValue] = useState(40);\n  const [selectedRadio, setSelectedRadio] = useState('');\n  const radios = ['Africa', 'America', 'Asia', 'Europe', 'Oceania'];\n  useEffect(() => {\n    if (playOnce) {\n      //pour utiliser axios, il faut mettre dans le terminal << npm install -s axios >>\n      axios.get('https://restcountries.eu/rest/v2/all?fields=name;population;region;capital;flag').then(response => {\n        setData(response.data);\n        setPlayOnce(false);\n      });\n    }\n\n    const sortedCountry = () => {\n      const countryObj = Object.keys(data).map(i => data[i]);\n      const sortedArray = countryObj.sort((a, b) => {\n        return b.population - a.population;\n      });\n      sortedArray.length = rangeValue;\n      setSortedData(sortedArray);\n    };\n\n    sortedCountry();\n  }, [data, rangeValue, playOnce]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"250\",\n        value: rangeValue,\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: radios.map(radio => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: radio,\n              id: radio,\n              checked: radio === selectedRadio,\n              onChange: e => setSelectedRadio(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: radio,\n              children: radio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, radio, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 30\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cancel\",\n      children: [selectedRadio && /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Annuler recherche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 35\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"countries-list\",\n      children: sortedData.filter(country => country.region.includes(selectedRadio)).map(country => /*#__PURE__*/_jsxDEV(Cards, {\n        country: country\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this) //avec country on a crée un props, on a envoyé les donnéesde Country dans Cards\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contries, \"cfUFEtKvSU444ZMIyJmiN0L2QaY=\");\n\n_c = Contries;\nexport default Contries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contries\");","map":{"version":3,"sources":["/home/blck-wlf/Documents/Devellopement/Front-End/REACTJS avec FromScratch-youtube/projet-world/src/components/Contries.js"],"names":["React","useEffect","useState","axios","Cards","Contries","data","setData","sortedData","setSortedData","playOnce","setPlayOnce","rangeValue","setRangeValue","selectedRadio","setSelectedRadio","radios","get","then","response","sortedCountry","countryObj","Object","keys","map","i","sortedArray","sort","a","b","population","length","e","target","value","radio","filter","country","region","includes","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Cards from './Cards';\nconst Contries = ()=>{\n\n    const [data,setData] = useState([]);\n    const [sortedData,setSortedData]= useState([]);\n    const [playOnce,setPlayOnce]=useState(true);\n    const [rangeValue,setRangeValue] = useState(40);\n    const [selectedRadio,setSelectedRadio]=useState('');\n    const radios = ['Africa','America','Asia','Europe','Oceania'];\n\n    useEffect(()=>{\n        if(playOnce){\n             //pour utiliser axios, il faut mettre dans le terminal << npm install -s axios >>\n        axios.get('https://restcountries.eu/rest/v2/all?fields=name;population;region;capital;flag')\n                .then((response)=>{\n                    setData(response.data);\n                    setPlayOnce(false);\n                });\n        }\n       \n        \n\n        const sortedCountry = () =>{\n            const countryObj = Object.keys(data).map((i)=>data[i]);\n            const sortedArray = countryObj.sort((a,b)=>{\n                return b.population - a.population;\n            });\n            sortedArray.length=rangeValue;\n            setSortedData(sortedArray);\n        }\n        sortedCountry();\n    },[data,rangeValue, playOnce]);\n\n    \n    return(\n        <div className='countries'>\n            <div className='sort-container'>\n                <input type='range' min='1' max='250' value={rangeValue} onChange={(e) => setRangeValue(e.target.value)}/>\n\n                <ul>\n                    {radios.map((radio)=>{\n                        return (\n                             <li key={radio}>\n                            <input type='radio' value={radio} id={radio} \n                            checked={radio === selectedRadio} onChange={(e)=>setSelectedRadio(e.target.value)}/>\n                            <label htmlFor={radio}>{radio}</label>\n                        </li>\n                        );\n                       \n                    })}\n                </ul>\n            </div>\n            <div className='cancel'>\n                {selectedRadio && <h5>Annuler recherche</h5>};\n                \n            </div>\n            <ul className='countries-list'>\n                {sortedData\n                .filter((country)=>country.region.includes(selectedRadio))\n                .map((country)=>(\n                <Cards country ={country} key={country.name} /> //avec country on a crée un props, on a envoyé les donnéesde Country dans Cards\n                ))}\n            </ul>\n            \n        </div>\n    )\n}\nexport default Contries;"]},"metadata":{},"sourceType":"module"}